2)

LOAD EMPLOYEE:

INFILE DATA::

E0001,SIVA KUMAR,20000,524406,  
E0002,RANIKUMARI,30000,46566,  
E0003,RAJA KUMAR,40000,181818,  
E0004,KIRANKUMAR,20000,88745,

PLI CODE :

PLILOAD:PROC OPTIONS(MAIN) REORDER;
DCL INFILE FILE RECORD INPUT;
DCL FILEEOF BIT(1) INIT('0'B);
DCL TRUE BIT(1) INIT('1'B);
DCL FALSE BIT(1) INIT('0'B);
DCL 01 INREC,
         05 ALLEMP PIC '(30)X',
         05 FILLER PIC '(50)X';
DCL EID    	PIC '(05)X';
DCL ENAME  	PIC '(10)X';
DCL ESALARY     PIC '(05)9';
DCL EPINCODE	PIC '(05)9';
DCL TEMP1   FIXED BIN INIT(1);
DCL POS1 FIXED BIN INIT(1);
DCL POS2 FIXED BIN INIT(1);
EXEC SQL INCLUDE SQLCA;
EXEC SQL INCLUDE EMPLOYEE;
ON ENDFILE(INFILE)  FILEEOF = '1'B;
OPEN FILE(INFILE);
READ FILE(INFILE) INTO(INREC);
DO WHILE(FILEEOF = FALSE);
         POS1 = 1;
         POS2 = 1;
	 POS1 = INDEX(INREC.ALLEMP,',',POS1);
         EID = SUBSTR(INREC.ALLEMP,POS2,POS1-POS2);
         POS2 = POS1 + 1;
         POS2 = INDEX(INREC.ALLEMP,',',POS1+1);
         ENAME = SUBSTR(INREC.ALLEMP,POS2,POS1-POS2);
         POS2 = POS1 +1;
         POS1 = INDEX(INREC.ALLEMP,',',POS1+1);
         ESALARY = SUBSTR(INREC.ALLEMP,POS2,POS1-POS2);
         POS2 = POS1 +1;
	 POS2 = INDEX(INREC.ALLEMP,',',POS1+1);
         EPINCODE = SUBSTR(INREC.ALLEMP,POS2,POS1-POS2);
         POS2 = POS1 +1;
 	 IF VALID(SALARY) & SALARY > 0 THEN
         DO;
              TEMP = MAXLENGTH(EPINCODE);
              IF TEMP = 6 THEN
              DO;
              EXEC SQL
                  INSERT INTO EMPLOYEE VALUES(:EMPID,
                  :EMPNAME, :SALARY, :PINCODE);
              IF SQLCODE = 0 THEN
                  PUT SKIP LIST('INSERTED',EID);
              ELSE
                  PUT SKIP LIST('UNSUCCESS',SQLCODE);
              END;
         END;
         READ FILE(INFILE) INTO(INREC);
END;
CLOSE FILE(INFILE);
END EMPLOAD;


SPOOL AREA RESULT :

INSERTED E0001
INSERTED E0003


1)

KEYFILE DATA:

E0003
E0001
E0002
E0004

PLI CODE :

VSAMDEL:PROCEDURE OPTIONS(MAIN) REORDER;                   
DCL INFILE FILE RECORD INPUT;
DCL PRODFL FILE RECORD INPUT DIRECT KEYED ENVIRONMENT(VSAM);                                                      
DCL FILEEOF BIT(1) INIT('0'B);                           
DCL 01 INREC                                             
    05 EMPID    CHAR(05),                                                             
    05 FILLER   CHAR(75);
DCL 01 VSAMREC  
    05 EMPID    CHAR(05);
    05 FILLER   CHAR(75);                           
DCL TRUE BIT(1) INIT('1'B);                              
DCL FALSE BIT(1) INIT('0'B);
DCL FOUND BIT(1) INITC('O'B);                        
DCL KEYFLAG BIT(1) INIT('1'B);                             
ON ENDFILE(INFILE)                                       
    FILEEOF='1'B; 
ON KEY(VSAMFL)           
 BEGIN;
     IF(ONCODE()=51) THEN                                        
         FOUNDFLAG = '0'B;                                    
     END;           
OPEN FILE(INFILE);                                                                            
READ FILE(INFILE) INTO (INREC);                         
DO WHILE(FILEEOF = FALSE);
    OPEN FILE(VSAMFL) INPUT DIRECT KEYED;
    FOUNDFLAG = '0'B;                                              
        READ FILE(VSAMFL) INTO (EMPID) KEY(INREC_EMPID);
	IF INREC.EMPID = VSAMREC.EMPID THEN
	DO;
	    DELETE FILE(VSAMFL) KEY(EMPID);
	    PUT SKIP LIST('DELETED', EMPID);
	END;
        ELSE
	DO; 
	    PUT SKIP LIST("KEY IS NOT PRESENT");
	END;
	END-IF.
	CLOSE FILE(VSAMFL);
	READ FILE(INFILE) INTO (INREC); 
END;
CLOSE FILE(INFILE);
END VSAMDEL;


SPOOLE AREA RESULT :

DELETED E0003
KEY IS NOT PRESENT
KEY IS NOT PRESENT
DELETED E0004



4)
USING DB2

SALESREP TABLE DATA:

S0001SIVA KUMARMR001BR00120000
S0002RAJA KUMARMR001BR00130000
S0003RAVI KUMARMR002BR00220000
S0004RANIKUMARIMR001BR0019999

BRPARM:PROC(BCODE) OPTIONS(MAIN) REORDER;
DCL OUTFILE FILE RECORD OUTPUT;                   
DCL BCODE CHAR(05) VAR;
DCL 01 OUTREC,
    05 SID    CHAR(05);
    05 SNAME  CHAR(10);
    05 SMANAGER CHAR(05);
    05 SBRCODE  CHAR(05);
    05 SSALARY  PIC '(05)9';
    05 FILLER  CHAR(50);
EXEC SQL INCLUDE SQLCA;
EXEC SQL INCLUDE SALESREP;
EXEC SQL DECLARE SALECUR CURSOR FOR 
	 SELECT SALESID,SALESNAME,MANAGER,BRCODE,SALARY FROM SALESREP
         WHERE BDCODE =:BCODE;
EXEC SQL OPEN SALECUR;
DO WHILE(SQLCODE = 0);
EXEC SQL FETCH SALECUR INTO :SALESID, :SALESNAME, :MANAGER, :BRCODE, :SALARY 
IF SQL CODE = 0 THEN
DO;
    IF SALARY > 10000 THEN
    DO;
 	OUTREC.SID = SALESID;
	OUTREC.SNAME = SALESNAME;
	OUTREC.SMANAGER = MANAGER;
	OUTREC.SBRCODE = BRCODE;
	OUTREC.SSALARY = SALARY;
	WRITE FILE(OUTFILE) FROM(OUTREC);
    END;
    ELSE IF(SQLCODE = 100) THEN
    DO;
	PUT SKIP LIST("END OF DATA");
    END;
    ELSE
    DO;
        PUT SKIP LIST("RETREIVING PROBLEM");
    END;
END;
EXEC SQL CLOSE SALECUR;
END BRPARM;

RUN JCL:

//LEMA07D JOB MSGLEVEL=(1,1),NOTIFY=&SYSUID                
//*                                                        
//*  PLI DB2 RUN JCL                                       
//*                                                        
//STEP01   EXEC PGM=IKJEFT01,PARM='BR001'                              
//             DYNAMNBR=20,REGION=4096K                    
//STEPLIB  DD  DISP=SHR,DSN=DSNA10.DBAG.SDSNEXIT           
//         DD  DISP=SHR,DSN=DSNA10.SDSNLOAD                
//SYSPRINT DD  SYSOUT=*                                    
//SYSTSPRT DD  SYSOUT=*                                    
//SYSUDUMP DD  SYSOUT=*                                    
//SYSTSIN  DD  *                                           
DSN SYSTEM (DBAG   )                                       
RUN PROGRAM   (SALEPARM) -                                                                  
      PLAN      (LEMA07A ) -                               
      LIBRARY   ('LEMA07.LOADLIB')                         
END                                                        
/*                                                         
//SYSOUT   DD  SYSOUT=*                                    

                                       


OUTFILE :

S0001SIVA KUMARMR001BR00120000
S0002RAJA KUMARMR001BR00130000


5)

ORDERDETAIL TABLE DATA:

ORD01PRD013
ORD02PRD025
ORD03PRD034

PRODUCT TABLE DATA:

PRD01DAIRY MILK5000 30CAT01
PRD02APPLIPHONE6000001CAT02
PRD03VIVO      2000005CAT03

PLI CODE:

BILL:PROC OPTIONS(MAIN) REORDER; 
DCL OUTFILE FILE RECORD OUTPUT;
DCL 01 OUTREC,
    05 ORDID CHAR(05);
    05 PRCODE  CHAR(05);
    05 ORDERQTY  CHAR(5);
    05 FILLER  CHAR(65);
EXEC SQL INCLUDE SQLCA;
EXEC SQL INCLUDE ORDERDETAIL;
EXEC SQL INCLUDE PRODUCT;
EXEC SQL DECLARE ORDERCUR CURSOR FOR 
	 SELECT OD.ORDERID,COUNT(OD.QTY),SUM(OD.QTY * PRICE) AS BILL
	 FROM ORDERDETAIL OD JOIN PRODUCT P
	 ON P.PCODE = OD.PCODE
	 GROUP BY OD.ORDERID
	 HAVING SUM(OD.QTY * PRICE) > 50000;
EXEC SQL OPEN ORDERCUR;
DO WHILE(SQLCODE = 0);
EXEC SQL FETCH ORDERCUR INTO :ORDERID, :PCODE, :QTY
    IF SQL CODE = 0 THEN
    DO;
	OUTREC.ORDID = ORDERID;
	OUTREC.PRCODE = PCODE;
	OUTREC.ORDERQTY= QTY;
	WRITE FILE(OUTFILE) FROM(OUTREC);
    END;
    ELSE IF(SQLCODE = 100) THEN
    DO;
	PUT SKIP LIST("END OF THE DATA");
    END;
    ELSE
    DO;
         PUT SKIP LIST("DATA RETRIVING UNSUCCESS",SQLCODE);
    END;
END;
EXEC SQL CLOSE ORDERCUR;
END BILL;


OUTPUT DATA :

ORD02PRD025
ORD03PRD034

BILL FOR OUTPUT DATA::

ORD01PRD013    -    15000
ORD02PRD025    -    300000
ORD03PRD034    -    80000



3)


CANDIDATE DATA :

SIVA KUMARCT001SALARIED  2020101523430000
RAJA KUMARCT002SALARIED  2021112024540000
RANIKUMARICT003SAVINGS   1999101020110000

PLI CODE :

BANK:PROC OPTIONS(MAIN) REORDER;
DCL INFILE FILE RECORD INPUT;
DCL APPROVE FILE RECORD OUTPUT;
DCL NAPPROVE FILE RECORD OUTPUT;
DCL FILEEOF BIT(1) INIT('0'B);
DCL 01 INREC
    05 CANDNAME     CHAR(10),
    05 CANDID       CHAR(5),
    05 CANDSALTYPE  CHAR(10),
    05 CANDOPENDATE,
       11 YYYY   PIC '(4)9',
       11 MM     PIC '(2)9',
       11 DD     PIC '(2)9',
    05 CANDAGE      PIC '(3)9',
    05 CANDPRELOAN  CHAR(1),
    05 CANDMINBAL   PIC '(05)9';
    05 FILLER       CHAR(38);
DCL 01 OUTREC1
    05 CANDNAME     CHAR(10),
    05 CANDID       CHAR(5),
    05 CANDSALTYPE  CHAR(10),
    05 CANDOPENDATE,
       11 YYYY   PIC '(4)9',
       11 MM     PIC '(2)9',
       11 DD     PIC '(2)9',
    05 CANDAGE       PIC '(3)9',
    05 CANDPRELOAN   CHAR(1),
    05 CANDMINBAL    PIC '(05)9';
    05 FILLER        CHAR(38);
DCL 01 OUTREC2
    05 CANDNAME     CHAR(10),
    05 CANDID       CHAR(5),
    05 CANDSALTYPE  CHAR(10),
    05 CANDOPENDATE,
       11 YYYY   PIC '(4)9',
       11 MM     PIC '(2)9',
       11 DD     PIC '(2)9',
    05 CANDAGE      PIC '(3)9',
    05 CANDPRELOAN  CHAR(1),
    05 CANDMINBAL   PIC '(05)9';
    05 FILLER       CHAR(38);
DCL TRUE BIT(1) INIT('1'B);
DCL FALSE BIT(1) INIT('0'B);
ON ENDFILE(INFILE)
   FILEEOF='1'B;
OPEN FILE(INFILE);
OPEN FILE(APPROVE);
OPEN FILE(NAPPROVE)
READ FILE(INFILE) INTO (INREC);
DO WHILE(FILEEOF = FALSE);
    IF INREC.CANDOPENDATE.YYYY <= 2018 THEN
    DO;
       IF (INREC.CANDSALTYPE = SALARIED && INREC.CANDMINBAL >= 10000) THEN
       DO;
           IF INREC.CANDPRELOAN = 'N' THEN
	   DO;
    	       IF (INREC.CANDAGE > 21 & INREC.CANDAGE < 50) THEN 
               DO;
                   PUT SKIP LIST(INREC);
		   OUTREC1.CANDNAME = INREC.CANDNAME;
		   OUTREC1.CANDID = INREC.CANDID;
		   OUTREC1.CANDSALTYPE = INREC.CANDSALTYPE;
	 	   OUTREC1.CANDOPENDATE = INREC.CANDOPENDATE;
		   OUTREC1.CANDAGE = INREC.CANDAGE;
		   OUTREC1.CANDPRELOAN = INREC.CANDPRELOAN;
		   OUTREC1.CANDMINBAL = INREC.CANDMINBAL;
                   WRITE FILE(OUTFILE1) FROM (OUTREC1);
              END;
	      ELSE
	      DO;
	           OUTREC2.CANDNAME = INREC.CANDNAME;
		   OUTREC2.CANDID = INREC.CANDID;
		   OUTREC2.CANDSALTYPE = INREC.CANDSALTYPE;
	 	   OUTREC2.CANDOPENDATE = INREC.CANDOPENDATE;
		   OUTREC2.CANDAGE = INREC.CANDAGE;
		   OUTREC2.CANDPRELOAN = INREC.CANDPRELOAN;
		   OUTREC2.CANDMINBAL = INREC.CANDMINBAL;
                   WRITE FILE(OUTFILE2) FROM (OUTREC2);
	      END;
	  END;
      END;
   END;
         READ FILE(INFILE) INTO (INREC);
END;
CLOSE FILE(INFILE);
CLOSE FILE(OUTFILE1);
CLOSE FILE(OUTFILE2);
END BANK;	


OUTPUT:

APPROVE DATA(OUTREC1) :

SIVA KUMARCT001SALARIED  2020101523430000
RAJA KUMARCT002SALARIED  2021112024540000

NAPPROVE DATA(OUTREC2) :

RANIKUMARICT003SAVINGS   1999101020110000

  


	





	
                         
		
                      